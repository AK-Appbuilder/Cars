apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'kotlin-allopen'


allOpen {
    // allows mocking for classes w/o directly opening them for release builds
    annotation 'com.sevenpeakssoftware.cars.testing.OpenClass'
}

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.sevenpeakssoftware.cars"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }


    dataBinding {
        enabled = true
    }

    aaptOptions.cruncherEnabled = false
    aaptOptions.useNewCruncher = false
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'androidx.core:core-ktx:1.0.2'

    //UI
    implementation "androidx.appcompat:appcompat:$appcompatVersion"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    implementation "androidx.activity:activity-ktx:$activityVersion"
    implementation "androidx.fragment:fragment-ktx:$fragmentVersion"
    implementation "androidx.cardview:cardview:$cardviewVersion"

    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
    implementation "com.squareup.retrofit2:retrofit-mock:$retrofit"
    implementation "io.reactivex.rxjava2:rxjava:$rxjava"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rxjava_adapter"

    implementation "com.squareup.okhttp3:logging-interceptor:$logging_version"
    implementation "androidx.room:room-runtime:$room_version"


    //Architecure compoenents
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    implementation "android.arch.lifecycle:reactivestreams:$room_version"
    kapt "androidx.room:room-compiler:$room_version" // For Kotlin use kapt instead of annotationProcessor


    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"

    implementation "com.jakewharton.timber:timber:$timberVersion"

    implementation 'com.github.bumptech.glide:glide:4.9.0'
    kapt 'com.github.bumptech.glide:compiler:4.9.0'

    // Dagger
    implementation "com.google.dagger:dagger-android:$dagger"
    implementation "com.google.dagger:dagger-android-support:$dagger"
    kapt "com.google.dagger:dagger-compiler:$dagger"
    kapt "com.google.dagger:dagger-android-processor:$dagger"

    implementation "com.google.android.material:material:1.1.0-alpha07"
    implementation 'com.jakewharton.threetenabp:threetenabp:1.2.1'

    implementation 'androidx.palette:palette:1.0.0'

    testImplementation "androidx.arch.core:core-runtime:2.0.1"
    testImplementation "androidx.arch.core:core-testing:2.0.1"
    testImplementation "com.squareup.okhttp3:mockwebserver:3.8.1"

    // Test helpers
    testImplementation "androidx.room:room-testing:$room_version"
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:1.10.19'

    testImplementation "com.google.truth:truth:0.44"

    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
}
